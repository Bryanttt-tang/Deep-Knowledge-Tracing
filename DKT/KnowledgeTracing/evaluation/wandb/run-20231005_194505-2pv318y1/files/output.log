
Dataset: assist2009, Learning Rate: 0.002

loading train data:    : 1884it [00:02, 941.47it/s]
loading train data:    : 3361it [00:08, 412.10it/s]
loading test data:    : 856it [00:00, 2067.47it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]












































Training:    : 100%|██████████| 160/160 [01:48<00:00,  1.47it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  93%|█████████▎| 42/45 [00:23<00:01,  1.75it/s]
auc:0.8067560960254339 f1: 0.8445990950641953 recall: 0.9300202326757714 precision: 0.7735495813875216

Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.81it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]














































Training:    : 100%|██████████| 160/160 [01:50<00:00,  1.45it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  89%|████████▉ | 40/45 [00:22<00:02,  1.72it/s]
auc:0.819466840753591 f1: 0.8502452730245734 recall: 0.9337000505816895 precision: 0.7804849689230899
Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.80it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]

















































Training:    : 100%|██████████| 160/160 [02:20<00:00,  1.14it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]











Testing:    : 100%|██████████| 45/45 [00:28<00:00,  1.59it/s]
auc:0.8226326601329238 f1: 0.8511222132813088 recall: 0.9295776428932726 precision: 0.7848791893998441
epoch: 3
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]













Training:    :  38%|███▊      | 60/160 [00:48<01:22,  1.22it/s]wandb: Network error resolved after 0:00:17.064954, resuming normal operation.


























Training:    : 100%|██████████| 160/160 [01:59<00:00,  1.34it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    :  89%|████████▉ | 40/45 [00:21<00:02,  1.79it/s]
Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.87it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 4









































Training:    : 100%|██████████| 160/160 [01:47<00:00,  1.49it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    :  98%|█████████▊| 44/45 [00:25<00:00,  1.69it/s]
auc:0.8270918621039278 f1: 0.8522731241632225 recall: 0.9257207890743551 precision: 0.7896235573293064
Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.73it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]











































Training:    : 100%|██████████| 160/160 [01:49<00:00,  1.46it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  89%|████████▉ | 40/45 [00:22<00:02,  1.76it/s]
Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.79it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 6













































Training:    : 100%|██████████| 160/160 [01:50<00:00,  1.45it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.86it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8288027893824363 f1: 0.8539046767912998 recall: 0.9303490136570561 precision: 0.7890689518334603
epoch: 7






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.55it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.95it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8313847690291305 f1: 0.8534909016080195 recall: 0.9178426909458776 precision: 0.7975715620020878
epoch: 8






































Training:    : 100%|██████████| 160/160 [01:40<00:00,  1.59it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.92it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8312621065145716 f1: 0.8541176470588236 recall: 0.9226479514415782 precision: 0.7950637463223276
epoch: 9






































Training:    : 100%|██████████| 160/160 [01:40<00:00,  1.59it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    : 100%|██████████| 45/45 [00:26<00:00,  1.67it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.832475736791173 f1: 0.8540036937265466 recall: 0.9180323722812342 precision: 0.7983241329257296
epoch: 10









































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.54it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.92it/s]
auc:0.8324319135558245 f1: 0.8547377030026873 recall: 0.9251011633788568 precision: 0.7943213897937025
epoch: 11
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









































Training:    : 100%|██████████| 160/160 [01:44<00:00,  1.53it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    :  98%|█████████▊| 44/45 [00:25<00:00,  1.78it/s]
auc:0.8333460250999843 f1: 0.8541265778091625 recall: 0.9177162367223065 precision: 0.7987782730724782
Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.74it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]













































Training:    : 100%|██████████| 160/160 [01:53<00:00,  1.40it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.77it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.834036261032712 f1: 0.8549449775094836 recall: 0.9205361659079413 precision: 0.7980792422215888
epoch: 13













































Training:    : 100%|██████████| 160/160 [01:50<00:00,  1.45it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.77it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8346483821487547 f1: 0.8551259990956019 recall: 0.9206499747091553 precision: 0.7983091919867542
epoch: 14









































Training:    : 100%|██████████| 160/160 [01:47<00:00,  1.49it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.76it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.834359103196931 f1: 0.8547452782934088 recall: 0.9170839656044512 precision: 0.8003421067152238
epoch: 15










































Training:    : 100%|██████████| 160/160 [01:47<00:00,  1.49it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    :  98%|█████████▊| 44/45 [00:25<00:00,  1.73it/s]
auc:0.8345450602977262 f1: 0.855121182914502 recall: 0.9199797673242286 precision: 0.798805393297905
Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.74it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
















































Training:    : 100%|██████████| 160/160 [01:55<00:00,  1.38it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  93%|█████████▎| 42/45 [00:23<00:01,  1.66it/s]
auc:0.8357048715317705 f1: 0.8551588354230404 recall: 0.9172357106727365 precision: 0.8009518446130233
Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.78it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]














































Training:    : 100%|██████████| 160/160 [01:51<00:00,  1.44it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  89%|████████▉ | 40/45 [00:23<00:02,  1.70it/s]
auc:0.8356861205594281 f1: 0.8552788709857696 recall: 0.9192463328275164 precision: 0.7996347996347997
Testing:    : 100%|██████████| 45/45 [00:26<00:00,  1.71it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]













































Training:    : 100%|██████████| 160/160 [01:50<00:00,  1.44it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  91%|█████████ | 41/45 [00:23<00:02,  1.66it/s]
auc:0.8353744777335448 f1: 0.8554401858987558 recall: 0.9193980778958017 precision: 0.799801991089599
Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.77it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










































Training:    : 100%|██████████| 160/160 [01:46<00:00,  1.50it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    :  89%|████████▉ | 40/45 [00:21<00:02,  1.79it/s]
auc:0.8359781890471039 f1: 0.8556556721404037 recall: 0.9198406676783004 precision: 0.7998438599577762
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.88it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









































Training:    : 100%|██████████| 160/160 [01:47<00:00,  1.49it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    :  89%|████████▉ | 40/45 [00:20<00:02,  1.90it/s]
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.94it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 21






































Training:    : 100%|██████████| 160/160 [01:42<00:00,  1.56it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  98%|█████████▊| 44/45 [00:24<00:00,  1.71it/s]
auc:0.8373132449250406 f1: 0.8544631652819327 recall: 0.9083965604451189 precision: 0.806575120981777
Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.82it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]














































Training:    : 100%|██████████| 160/160 [01:52<00:00,  1.42it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.81it/s]
auc:0.8372545386014656 f1: 0.8553384133205054 recall: 0.9162493677288821 precision: 0.8020211859247535
epoch: 23
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










































Training:    : 100%|██████████| 160/160 [01:47<00:00,  1.48it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.81it/s]
auc:0.8372553829199237 f1: 0.8548044898007562 recall: 0.91197521497218 precision: 0.8043788618974325
epoch: 24
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










































Training:    : 100%|██████████| 160/160 [01:48<00:00,  1.48it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.82it/s]
auc:0.8375393219792158 f1: 0.854769369626146 recall: 0.9101542741527567 precision: 0.8057384022926742
epoch: 25
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]













































Training:    : 100%|██████████| 160/160 [01:53<00:00,  1.42it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  96%|█████████▌| 43/45 [00:24<00:01,  1.76it/s]
auc:0.8378260892833866 f1: 0.8549152703280011 recall: 0.9110015174506828 precision: 0.8053344661062422
Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.79it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










































Training:    : 100%|██████████| 160/160 [01:47<00:00,  1.48it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.88it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8371134172079111 f1: 0.8554868213481752 recall: 0.9154779969650987 precision: 0.8028745383770836
epoch: 27













































Training:    : 100%|██████████| 160/160 [01:53<00:00,  1.42it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  93%|█████████▎| 42/45 [00:26<00:02,  1.48it/s]
Testing:    : 100%|██████████| 45/45 [00:27<00:00,  1.61it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 28













































Training:    : 100%|██████████| 160/160 [01:51<00:00,  1.44it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    : 100%|██████████| 45/45 [00:26<00:00,  1.67it/s]
auc:0.8384224766004287 f1: 0.8548456057007126 recall: 0.910192210419828 precision: 0.8058441558441558
epoch: 29
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]














































Training:    : 100%|██████████| 160/160 [01:52<00:00,  1.43it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]












Testing:    : 100%|██████████| 45/45 [00:42<00:00,  1.06it/s]
auc:0.8373550378896741 f1: 0.8551153513807839 recall: 0.9135179564997471 precision: 0.803731559155337
epoch: 30
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]














































































































Training:    : 100%|██████████| 160/160 [06:19<00:00,  2.37s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    :  98%|█████████▊| 44/45 [00:24<00:00,  1.74it/s]
auc:0.8375222829047186 f1: 0.8561131166559682 recall: 0.9191578148710167 precision: 0.801161726939059
Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.77it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]











































Training:    : 100%|██████████| 160/160 [01:47<00:00,  1.49it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    :  98%|█████████▊| 44/45 [00:25<00:00,  1.76it/s]
auc:0.8385314515674924 f1: 0.8553194265683662 recall: 0.9117728882144663 precision: 0.8054491225326467
Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.76it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]







































Training:    : 100%|██████████| 160/160 [01:44<00:00,  1.54it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.81it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8378094879049988 f1: 0.8562188908196625 recall: 0.9190440060698027 precision: 0.8014335336604731
epoch: 33









































Training:    : 100%|██████████| 160/160 [01:45<00:00,  1.52it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  96%|█████████▌| 43/45 [00:23<00:01,  1.81it/s]
auc:0.8387266842745154 f1: 0.8556833450731322 recall: 0.9140111279716743 precision: 0.8043533902360313
Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.85it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










































Training:    : 100%|██████████| 160/160 [01:47<00:00,  1.49it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.77it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8388360321267025 f1: 0.8554450974216973 recall: 0.9102301466868994 precision: 0.8068804717012857
epoch: 35










































Training:    : 100%|██████████| 160/160 [01:47<00:00,  1.49it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.84it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8383633725327221 f1: 0.856089953360574 recall: 0.91800708143652 precision: 0.8019973707177499
epoch: 36














































Training:    : 100%|██████████| 160/160 [01:54<00:00,  1.40it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.87it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8385950357611748 f1: 0.8560377915559492 recall: 0.9166034395548811 precision: 0.8029799490417636
epoch: 37












































Training:    : 100%|██████████| 160/160 [01:49<00:00,  1.46it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    : 100%|██████████| 45/45 [00:27<00:00,  1.61it/s]
auc:0.8389822162348471 f1: 0.8557674658203415 recall: 0.9138088012139606 precision: 0.8046588795973588
epoch: 38
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]












































Training:    : 100%|██████████| 160/160 [01:49<00:00,  1.46it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.80it/s]
auc:0.8393091042026553 f1: 0.8554645506542257 recall: 0.9106727364693981 precision: 0.8065675854267699
epoch: 39
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]











































Training:    : 100%|██████████| 160/160 [01:49<00:00,  1.46it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
















Testing:    : 100%|██████████| 45/45 [01:09<00:00,  1.55s/it]
auc:0.8393025250885634 f1: 0.8554434287071114 recall: 0.9111532625189681 precision: 0.8061535019019915
epoch: 40
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]



























































































































Training:    : 100%|██████████| 160/160 [07:53<00:00,  2.96s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]

































Testing:    : 100%|██████████| 45/45 [01:48<00:00,  2.41s/it]
auc:0.8386230138646786 f1: 0.8563688190534523 recall: 0.9193727870510875 precision: 0.8014462718814762
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 41























































































































Training:    : 100%|██████████| 160/160 [3:40:15<00:00, 82.60s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]


























Testing:    : 100%|██████████| 45/45 [01:33<00:00,  2.07s/it]
auc:0.8384531801390559 f1: 0.855370749206914 recall: 0.9120763783510369 precision: 0.8053034109306091
epoch: 42
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]













































































































Training:    : 100%|██████████| 160/160 [06:19<00:00,  2.37s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]





















Testing:    :  98%|█████████▊| 44/45 [01:22<00:01,  1.99s/it]
Testing:    : 100%|██████████| 45/45 [01:24<00:00,  1.88s/it]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 43

























































































































Training:    : 100%|██████████| 160/160 [06:25<00:00,  2.41s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]


























Testing:    : 100%|██████████| 45/45 [01:34<00:00,  2.11s/it]
auc:0.8393172407336129 f1: 0.8557992987775987 recall: 0.913631765300961 precision: 0.8048525086890651
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]



















































































































































Training:    : 100%|██████████| 160/160 [07:25<00:00,  2.79s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]



























Testing:    :  96%|█████████▌| 43/45 [01:32<00:03,  1.99s/it]
auc:0.8393700604440393 f1: 0.8557229862358935 recall: 0.9123545776428933 precision: 0.8057109674249276
Testing:    : 100%|██████████| 45/45 [01:37<00:00,  2.16s/it]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]














































































































































Training:    : 100%|██████████| 160/160 [07:10<00:00,  2.69s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]































Testing:    : 100%|██████████| 45/45 [01:39<00:00,  2.21s/it]
auc:0.8397533920329804 f1: 0.8554573324999256 recall: 0.9085988872028326 precision: 0.8081885158315055
epoch: 46
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








































































































































Training:    : 100%|██████████| 160/160 [07:14<00:00,  2.71s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






























Testing:    :  98%|█████████▊| 44/45 [01:39<00:02,  2.43s/it]
Testing:    : 100%|██████████| 45/45 [01:41<00:00,  2.26s/it]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]



















































































































































Training:    : 100%|██████████| 160/160 [07:23<00:00,  2.77s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]


































Testing:    : 100%|██████████| 45/45 [01:44<00:00,  2.33s/it]
auc:0.8398653443989728 f1: 0.8557221596633676 recall: 0.912910976226606 precision: 0.8052760736196319
epoch: 48
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
























































































































































Training:    : 100%|██████████| 160/160 [08:17<00:00,  3.11s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






























Testing:    :  98%|█████████▊| 44/45 [01:54<00:02,  2.52s/it]
auc:0.8399732799043641 f1: 0.8556826478461912 recall: 0.9114567526555387 precision: 0.8063408249337167
Testing:    : 100%|██████████| 45/45 [01:57<00:00,  2.61s/it]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
























































































































































Training:    : 100%|██████████| 160/160 [08:09<00:00,  3.06s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]


































Testing:    : 100%|██████████| 45/45 [01:51<00:00,  2.48s/it]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]
auc:0.8395617640597153 f1: 0.8561033613743655 recall: 0.9149848254931715 precision: 0.8043420262789301
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]

























































































































































Training:    : 100%|██████████| 160/160 [07:51<00:00,  2.95s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]

































Testing:    : 100%|██████████| 45/45 [01:47<00:00,  2.40s/it]
auc:0.8394688803286775 f1: 0.8560104271580071 recall: 0.9135432473444614 precision: 0.8052948389254264
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 51


















































































































































Training:    : 100%|██████████| 160/160 [07:45<00:00,  2.91s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
































Testing:    : 100%|██████████| 45/45 [01:45<00:00,  2.34s/it]
auc:0.8399004307583151 f1: 0.8562208549796981 recall: 0.9159711684370258 precision: 0.8037884084024102
epoch: 52
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]

















































































































































Training:    : 100%|██████████| 160/160 [07:33<00:00,  2.83s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]































Testing:    :  98%|█████████▊| 44/45 [01:40<00:02,  2.36s/it]
Testing:    : 100%|██████████| 45/45 [01:43<00:00,  2.31s/it]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 53


















































































































































Training:    : 100%|██████████| 160/160 [07:22<00:00,  2.77s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
































Testing:    : 100%|██████████| 45/45 [01:48<00:00,  2.41s/it]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8395283036570755 f1: 0.856186143370151 recall: 0.9150354071825999 precision: 0.8044490889484275
epoch: 54















































































































































Training:    : 100%|██████████| 160/160 [07:42<00:00,  2.89s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    :  84%|████████▍ | 38/45 [00:29<00:04,  1.71it/s]

Testing:    : 100%|██████████| 45/45 [00:33<00:00,  1.34it/s]
epoch: 55
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]












































Training:    : 100%|██████████| 160/160 [11:46:28<00:00, 264.93s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  93%|█████████▎| 42/45 [00:22<00:01,  1.82it/s]
auc:0.8394465944053652 f1: 0.8563888200077934 recall: 0.9171092564491654 precision: 0.8032095155824307
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.88it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]







































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.54it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    :  89%|████████▉ | 40/45 [00:20<00:02,  1.91it/s]
auc:0.8400252948931812 f1: 0.855923653067765 recall: 0.911848760748609 precision: 0.806462075290223
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.94it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:42<00:00,  1.56it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    :  91%|█████████ | 41/45 [00:20<00:02,  1.93it/s]
auc:0.8393274050493845 f1: 0.8564467699785865 recall: 0.9179564997470916 precision: 0.8026625681398512
Testing:    : 100%|██████████| 45/45 [00:22<00:00,  1.98it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:39<00:00,  1.62it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    : 100%|██████████| 45/45 [00:22<00:00,  1.99it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8401474227614989 f1: 0.8565420533145892 recall: 0.9168563480020233 precision: 0.8036733653302592
epoch: 59






































Training:    : 100%|██████████| 160/160 [01:39<00:00,  1.62it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    :  93%|█████████▎| 42/45 [00:21<00:01,  1.94it/s]
Testing:    : 100%|██████████| 45/45 [00:22<00:00,  1.98it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 60






































Training:    : 100%|██████████| 160/160 [01:38<00:00,  1.62it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    :  91%|█████████ | 41/45 [00:20<00:02,  1.94it/s]
auc:0.8401808716224564 f1: 0.8555023354059442 recall: 0.9090794132524026 precision: 0.8078889700511322
Testing:    : 100%|██████████| 45/45 [00:22<00:00,  1.98it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:38<00:00,  1.62it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    : 100%|██████████| 45/45 [00:22<00:00,  1.97it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]
auc:0.8405094159104698 f1: 0.8559603531271649 recall: 0.9140364188163884 precision: 0.8048234626048034
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









































Training:    : 100%|██████████| 160/160 [01:47<00:00,  1.49it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.84it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8403859406839063 f1: 0.8559999999999999 recall: 0.9119625695498229 precision: 0.8065086110489823
epoch: 63











































Training:    : 100%|██████████| 160/160 [01:58<00:00,  1.35it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]













Testing:    : 100%|██████████| 45/45 [00:38<00:00,  1.18it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8400959005137376 f1: 0.8562449694616733 recall: 0.9147572078907436 precision: 0.8047681559273763
epoch: 64

























































Training:    : 100%|██████████| 160/160 [02:30<00:00,  1.07it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]













Testing:    : 100%|██████████| 45/45 [00:39<00:00,  1.14it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8401277131192607 f1: 0.8561824530617327 recall: 0.9131259484066768 precision: 0.8059241732608623
epoch: 65




























































Training:    : 100%|██████████| 160/160 [02:26<00:00,  1.09it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]











Testing:    : 100%|██████████| 45/45 [00:31<00:00,  1.45it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8401877708850615 f1: 0.8563124152750563 recall: 0.9146181082448154 precision: 0.8049950472459348
epoch: 66


































































Training:    : 100%|██████████| 160/160 [02:41<00:00,  1.01s/it]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]














Testing:    : 100%|██████████| 45/45 [00:39<00:00,  1.14it/s]
auc:0.8405895876325211 f1: 0.8563384946592697 recall: 0.9154527061203844 precision: 0.8043956532367386
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 67






















































Training:    : 100%|██████████| 160/160 [02:29<00:00,  1.07it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]













Testing:    :  93%|█████████▎| 42/45 [00:36<00:02,  1.13it/s]
auc:0.8400300118899926 f1: 0.8562319594946293 recall: 0.9152630247850279 precision: 0.8043541073968705
Testing:    : 100%|██████████| 45/45 [00:38<00:00,  1.18it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
























































Training:    : 100%|██████████| 160/160 [02:21<00:00,  1.13it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  89%|████████▉ | 40/45 [00:26<00:03,  1.54it/s]
auc:0.8401247660838351 f1: 0.8565666572318142 recall: 0.9184370257966616 precision: 0.8025059665871122
Testing:    : 100%|██████████| 45/45 [00:29<00:00,  1.54it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]































































Training:    : 100%|██████████| 160/160 [02:37<00:00,  1.02it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  87%|████████▋ | 39/45 [00:23<00:03,  1.66it/s]

Testing:    : 100%|██████████| 45/45 [00:27<00:00,  1.64it/s]
epoch: 70
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
























































Training:    : 100%|██████████| 160/160 [02:26<00:00,  1.09it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]













Testing:    :  96%|█████████▌| 43/45 [00:35<00:01,  1.18it/s]
Testing:    : 100%|██████████| 45/45 [00:36<00:00,  1.22it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 71













































Training:    : 100%|██████████| 160/160 [01:50<00:00,  1.44it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  93%|█████████▎| 42/45 [00:22<00:01,  1.81it/s]
auc:0.8404631607538593 f1: 0.8562426711833893 recall: 0.9141375821952453 precision: 0.8052442800810925
Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.86it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]







































Training:    : 100%|██████████| 160/160 [01:44<00:00,  1.53it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  93%|█████████▎| 42/45 [00:22<00:01,  1.85it/s]
auc:0.8403304768628261 f1: 0.8561533133225584 recall: 0.914339908952959 precision: 0.8049293657950105
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.91it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]













































Training:    : 100%|██████████| 160/160 [01:50<00:00,  1.45it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:25<00:00,  1.77it/s]
auc:0.840253162861335 f1: 0.8567104410812084 recall: 0.9198153768335863 precision: 0.8017083654799956
epoch: 74
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]







































Training:    : 100%|██████████| 160/160 [01:42<00:00,  1.56it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    :  89%|████████▉ | 40/45 [00:21<00:02,  1.73it/s]
Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.84it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 75



















































Training:    : 100%|██████████| 160/160 [02:05<00:00,  1.28it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]












Testing:    : 100%|██████████| 45/45 [00:35<00:00,  1.27it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8405872663338457 f1: 0.8560681779202423 recall: 0.9152124430955993 precision: 0.804104125234704
epoch: 76














































Training:    : 100%|██████████| 160/160 [02:07<00:00,  1.25it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    : 100%|██████████| 45/45 [00:26<00:00,  1.68it/s]
auc:0.8401069727160027 f1: 0.8568672998323973 recall: 0.9212569549822964 precision: 0.8008904523717914
epoch: 77
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]













































Training:    : 100%|██████████| 160/160 [01:51<00:00,  1.43it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  93%|█████████▎| 42/45 [00:26<00:02,  1.47it/s]
auc:0.8409053744550763 f1: 0.8560303455295377 recall: 0.9146307536671725 precision: 0.8044868586428198
Testing:    : 100%|██████████| 45/45 [00:27<00:00,  1.62it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










































Training:    : 100%|██████████| 160/160 [01:49<00:00,  1.46it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  91%|█████████ | 41/45 [00:24<00:02,  1.63it/s]
Testing:    : 100%|██████████| 45/45 [00:26<00:00,  1.71it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 79














































Training:    : 100%|██████████| 160/160 [01:53<00:00,  1.41it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    : 100%|██████████| 45/45 [00:26<00:00,  1.71it/s]
auc:0.8405294243934998 f1: 0.8564811806199673 recall: 0.9166287303995954 precision: 0.803741115681861
epoch: 80
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]












































Training:    : 100%|██████████| 160/160 [01:50<00:00,  1.45it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  91%|█████████ | 41/45 [00:21<00:02,  1.82it/s]
auc:0.8406420827553258 f1: 0.8560423631038665 recall: 0.9147951441578148 precision: 0.8043809417912937
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.88it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.54it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  98%|█████████▊| 44/45 [00:23<00:00,  1.85it/s]
auc:0.8404658600870241 f1: 0.8563952011624953 recall: 0.9166666666666666 precision: 0.8035605413973905
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.90it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









































Training:    : 100%|██████████| 160/160 [01:50<00:00,  1.45it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  91%|█████████ | 41/45 [00:22<00:02,  1.82it/s]
auc:0.840492164646581 f1: 0.8564740653169794 recall: 0.916122913505311 precision: 0.8041178755757811
Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.86it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:44<00:00,  1.53it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  91%|█████████ | 41/45 [00:21<00:02,  1.84it/s]
auc:0.8405440755826924 f1: 0.8565094078175397 recall: 0.9184243803743045 precision: 0.8024151226895584
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.89it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.55it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    :  87%|████████▋ | 39/45 [00:20<00:03,  1.85it/s]
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.90it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 85






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.55it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  96%|█████████▌| 43/45 [00:22<00:01,  1.85it/s]
auc:0.8408524013290564 f1: 0.8561988951584731 recall: 0.9143019726858878 precision: 0.8050393595581932
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.90it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.55it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  93%|█████████▎| 42/45 [00:22<00:01,  1.84it/s]
auc:0.841163770528285 f1: 0.8557910920887825 recall: 0.9115073343449671 precision: 0.8064938406972711
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.88it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.55it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  89%|████████▉ | 40/45 [00:25<00:03,  1.53it/s]
auc:0.8405694381634017 f1: 0.8566105592076173 recall: 0.9186519979767325 precision: 0.8024189539956923
Testing:    : 100%|██████████| 45/45 [00:28<00:00,  1.58it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.55it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    :  98%|█████████▊| 44/45 [00:23<00:00,  1.84it/s]
auc:0.8411456106676454 f1: 0.8558722242014013 recall: 0.9113935255437532 precision: 0.8067271099171703
Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.86it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.54it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.89it/s]
auc:0.8407252602866009 f1: 0.8564508792760224 recall: 0.916704602933738 precision: 0.803629430088574
epoch: 90
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








































Training:    : 100%|██████████| 160/160 [01:46<00:00,  1.50it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.90it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.8409031097994267 f1: 0.8562481871940427 recall: 0.9145928174001011 precision: 0.8049011206695083
epoch: 91






































Training:    : 100%|██████████| 160/160 [01:42<00:00,  1.56it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.91it/s]
auc:0.840638520637011 f1: 0.8559664922459924 recall: 0.9122407688416793 precision: 0.806231699412146
epoch: 92
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.55it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  91%|█████████ | 41/45 [00:21<00:02,  1.83it/s]
auc:0.841457243372361 f1: 0.8557817957185964 recall: 0.9109509357612544 precision: 0.8069133921770688
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.89it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]







































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.54it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.90it/s]
auc:0.8408679442463868 f1: 0.855838388150678 recall: 0.9126074860900354 precision: 0.8057183686684306
epoch: 94
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










































Training:    : 100%|██████████| 160/160 [01:47<00:00,  1.49it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]







Testing:    :  84%|████████▍ | 38/45 [00:20<00:03,  1.87it/s]

Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.89it/s]
epoch: 95
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.54it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  93%|█████████▎| 42/45 [00:22<00:01,  1.85it/s]
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.89it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
epoch: 96






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.54it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  93%|█████████▎| 42/45 [00:22<00:01,  1.81it/s]
auc:0.8411844162897473 f1: 0.8563370288248336 recall: 0.9157056145675265 precision: 0.8041979010494753
Testing:    : 100%|██████████| 45/45 [00:24<00:00,  1.83it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








































Training:    : 100%|██████████| 160/160 [01:46<00:00,  1.50it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    :  84%|████████▍ | 38/45 [00:20<00:03,  1.85it/s]
auc:0.840889968262291 f1: 0.8563958784351304 recall: 0.9154274152756702 precision: 0.804516458847325
Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.90it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:42<00:00,  1.56it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]








Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.90it/s]
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]
auc:0.8413736166032948 f1: 0.8560690489175539 recall: 0.9130753667172483 precision: 0.8057626210775343
Training:    :   0%|          | 0/160 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 160/160 [01:43<00:00,  1.55it/s]
Testing:    :   0%|          | 0/45 [00:00<?, ?it/s]..\evaluation\eval.py:73: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    :  96%|█████████▌| 43/45 [00:22<00:01,  1.88it/s]

Testing:    : 100%|██████████| 45/45 [00:23<00:00,  1.91it/s]