
Dataset: LON_sem1, Learning Rate: 0.01



loading train data:    : 4000it [00:21, 187.64it/s]
loading test data:    : 1045it [00:01, 727.33it/s]
Training:    :   0%|          | 0/1519 [00:00<?, ?it/s]



























































































































































































































































































































































































Training:    : 100%|██████████| 1519/1519 [16:25<00:00,  1.54it/s]





























































































































































































Testing:    :  50%|████▉     | 759/1519 [07:00<07:00,  1.81it/s]
Traceback (most recent call last):
  File "/cluster/home/yutang/Deep-Knowledge-Tracing/DKT/KnowledgeTracing/evaluation/./run.py", line 53, in <module>
    train_auc, train_f1, train_recall, train_precision,val_loss=eval.test(trainLoaders, model,loss_func, device)
  File "/cluster/home/yutang/Deep-Knowledge-Tracing/DKT/KnowledgeTracing/evaluation/eval.py", line 100, in test
    pred_epoch, gold_epoch, val_loss = test_epoch(model, testLoaders[i],loss_func,device)
  File "/cluster/home/yutang/Deep-Knowledge-Tracing/DKT/KnowledgeTracing/evaluation/eval.py", line 63, in test_epoch
    pred = model(batch)# output: torch.size([batch_size, sequence_length, n_questions])
  File "/cluster/home/yutang/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/cluster/home/yutang/Deep-Knowledge-Tracing/DKT/KnowledgeTracing/model/RNNModel.py", line 24, in forward
    out,hn = self.rnn(x, h0)
  File "/cluster/home/yutang/miniconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/cluster/home/yutang/miniconda3/lib/python3.9/site-packages/torch/nn/modules/rnn.py", line 509, in forward
    result = _VF.rnn_tanh(input, hx, self._flat_weights, self.bias, self.num_layers,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 36.00 MiB (GPU 0; 23.69 GiB total capacity; 22.14 GiB already allocated; 10.06 MiB free; 22.37 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF