
Dataset: synthetic, Learning Rate: 0.002
loading train data:    : 3200it [00:01, 2289.37it/s]
loading test data:    : 0it [00:00, ?it/s]
loading test data:    : 800it [00:00, 5161.27it/s]
Training:    :   0%|          | 0/50 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]































Training:    : 100%|██████████| 50/50 [01:43<00:00,  2.07s/it]
Testing:    :   0%|          | 0/13 [00:00<?, ?it/s]..\evaluation\eval.py:76: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]









Testing:    : 100%|██████████| 13/13 [00:30<00:00,  2.38s/it]
Training:    :   0%|          | 0/50 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.6565566105499061 f1: 0.7558887999721652 recall: 0.901377479047382 precision: 0.6508388256440982
epoch: 1



































Training:    : 100%|██████████| 50/50 [01:51<00:00,  2.24s/it]
Testing:    :   0%|          | 0/13 [00:00<?, ?it/s]..\evaluation\eval.py:76: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]











Testing:    : 100%|██████████| 13/13 [00:33<00:00,  2.55s/it]
Training:    :   0%|          | 0/50 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
auc:0.6865573954531278 f1: 0.7631762409369772 recall: 0.9083893452825492 precision: 0.6579912243793953
epoch: 2





































Training:    : 100%|██████████| 50/50 [01:45<00:00,  2.12s/it]
Testing:    :   0%|          | 0/13 [00:00<?, ?it/s]..\evaluation\eval.py:76: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]





Testing:    :  92%|█████████▏| 12/13 [00:16<00:01,  1.34s/it]
auc:0.6999203618097717 f1: 0.759310607296254 recall: 0.8691809808314662 precision: 0.6740998165846124
Testing:    : 100%|██████████| 13/13 [00:16<00:00,  1.29s/it]
Training:    :   0%|          | 0/50 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






































Training:    : 100%|██████████| 50/50 [01:58<00:00,  2.38s/it]
Testing:    :   0%|          | 0/13 [00:00<?, ?it/s]..\evaluation\eval.py:76: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]






Testing:    :  85%|████████▍ | 11/13 [00:19<00:03,  1.61s/it]
auc:0.7192084337573613 f1: 0.7628472415262875 recall: 0.8539540287113103 precision: 0.6893064067785257
Testing:    : 100%|██████████| 13/13 [00:22<00:00,  1.72s/it]
Training:    :   0%|          | 0/50 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]
































Training:    : 100%|██████████| 50/50 [01:41<00:00,  2.02s/it]
Testing:    :   0%|          | 0/13 [00:00<?, ?it/s]..\evaluation\eval.py:76: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]










Testing:    :  92%|█████████▏| 12/13 [00:29<00:02,  2.62s/it]
auc:0.7282987147648063 f1: 0.7684014869888476 recall: 0.8576051779935275 precision: 0.6960064650818237
Testing:    : 100%|██████████| 13/13 [00:30<00:00,  2.36s/it]
Training:    :   0%|          | 0/50 [00:00<?, ?it/s]..\evaluation\eval.py:31: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  a = (((batch[student][:, 0:C.NUM_OF_QUESTIONS] - batch[student][:, C.NUM_OF_QUESTIONS:]).sum(1) + 1)//2)[1:]











